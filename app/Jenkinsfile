pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "my-flask-app:jenkins-${BUILD_NUMBER}"  // Dynamic image name using build tag or branch
        DOCKER_USERNAME = credentials('docker-hub-username')  // 'docker-hub-username' is the ID in Jenkins credentials
        DOCKER_PASSWORD = credentials('docker-hub-token')      // 'docker-hub-token' is the ID for the token in Jenkins credentials
    

    }

    stages {
        stage('Clone Repository') {
            steps {
                
               git branch: 'main', url:'https://github.com/ShrutiBhapkar/Devops-projects.git'
            }
        }
        
       stage('Build Docker Image') {
            steps {
               bat "set DOCKER_BUILDKIT=0 docker build -t ${DOCKER_IMAGE} -f Dockerfile ."
            }
        }

        stage('Push to Docker Hub') {
            steps {
               script {
                    bat """
                        echo|set /p=%DOCKER_PASSWORD% | docker login --username %DOCKER_USERNAME% --password-stdin
                        docker push %DOCKER_IMAGE%
                    """
                }
            }
        }
        

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    writeFile file: 'k8s\\deployment-temp.yaml',
                        text: readFile('k8s\\deployment.yaml').replace('{{IMAGE_NAME}}', env.DOCKER_IMAGE)

                    bat 'kubectl apply -f k8s\\deployment-temp.yaml'

                    bat 'del k8s\\deployment-temp.yaml'  // delete in Windows
                }
            }
        }
    }
}
