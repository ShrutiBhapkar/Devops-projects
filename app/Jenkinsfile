pipeline {
    agent any
    
    environment {
        // Set up environment variables
        DOCKER_IMAGE = "your-docker-repo/your-app-name"
        KUBERNETES_NAMESPACE = "your-k8s-namespace"
        K8S_DEPLOYMENT_NAME = "your-k8s-deployment"
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone the repository
                git 'https://github.com/your-username/your-repo.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log into Docker Hub (or another registry) and push the image
                    withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                        sh "docker push $DOCKER_IMAGE"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Deploy to Kubernetes
                    sh """
                    kubectl set image deployment/$K8S_DEPLOYMENT_NAME $K8S_DEPLOYMENT_NAME=$DOCKER_IMAGE --namespace=$KUBERNETES_NAMESPACE
                    kubectl rollout status deployment/$K8S_DEPLOYMENT_NAME --namespace=$KUBERNETES_NAMESPACE
                    """
                }
            }
        }
    }
    
    post {
        success {
            echo "Deployment successfully completed!"
        }
        failure {
            echo "Deployment failed!"
        }
    }
}

