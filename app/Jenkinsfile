pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'My-flask-app' // Change this to your Docker image name
        DOCKER_TAG = 'latest'
        REGISTRY_CREDENTIALS = 'dockerhub-credentials' // Change this to your Docker registry credentials ID in Jenkins
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone your Git repository
                git 'https://github.com/ShrutiBhapkar/Devops-project.git'  // Replace with your Git repository URL
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image using the Dockerfile
                    sh 'docker build -t $DOCKER_IMAGE:$DOCKER_TAG .'
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    // Log in to Docker Hub using Jenkins credentials
                      withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin'
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to Docker Hub
                    sh 'docker push $DOCKER_IMAGE:$DOCKER_TAG'
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Deploy the app to Kubernetes using kubectl
                    // First, ensure kubectl is configured to use your local Kubernetes cluster (docker-desktop)
                    sh 'kubectl apply -f k8s/deployment.yaml' // You can define your Kubernetes resources in a deployment.yaml file
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
