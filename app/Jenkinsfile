pipeline {
     agent any
     environment {
         DOCKER_IMAGE = "my-flask-app:jenkins-${BUILD_NUMBER}"  // Dynamic image name using build tag or branch
     }
 
     stages {
         stage('Clone Repository') {
             steps {
 
                git branch: 'main', url:'https://github.com/ShrutiBhapkar/Devops-projects.git'
             }
         }
 
        stage('Build Docker Image') {
             steps {
                bat """
                dir
             set DOCKER_BUILDKIT=0
                 docker build -t %DOCKER_IMAGE% -f app/Dockerfile app
        """
             }
         }
 
         stage('Push to Docker Hub') {
             steps {
                 withCredentials([usernamePassword(credentialsId: 'docker-hub-credens', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                      bat """
                       echo Logging into Docker Hub...
                        docker logout
                        docker login --username %DOCKER_USERNAME% --password %DOCKER_PASSWORD%
                        if %ERRORLEVEL% NEQ 0 (
                            echo Docker login failed!
                            exit /b 1
                        ) else (
                            echo Docker login successful!
                        )
                      docker push %DOCKER_IMAGE%
                     """
                 }
             }
         }
 
         stage('Deploy to Kubernetes') {
             steps {
                 script {
                     writeFile file: 'k8s\\deployment-temp.yaml',
                         text: readFile('k8s\\deployment.yaml').replace('{{IMAGE_NAME}}', env.DOCKER_IMAGE)
 
                     bat 'kubectl apply -f k8s\\deployment-temp.yaml'
 
                     bat 'del k8s\\deployment-temp.yaml'  // delete in Windows
                 }
             }
         }
     }
 }
